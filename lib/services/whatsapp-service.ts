import type { Order } from "../types";

// Servi√ßo para envio de mensagens via WhatsApp
export const WhatsAppService = {
  /**
   * Formata o n√∫mero de telefone para o formato internacional usado pelo WhatsApp
   * @param phone N√∫mero de telefone no formato brasileiro
   * @returns N√∫mero formatado para WhatsApp
   */
  formatPhoneNumber(phone: string): string {
    // Remove todos os caracteres n√£o num√©ricos
    const numbers = phone.replace(/\D/g, '');
    
    // Verifica se j√° come√ßa com 55 (c√≥digo do Brasil)
    if (numbers.startsWith('55') && numbers.length >= 12) {
      return numbers;
    }
    
    // Adiciona o c√≥digo do Brasil (55) se n√£o estiver presente
    return `55${numbers}`;
  },

  /**
   * Cria uma mensagem de confirma√ß√£o personalizada para o cliente
   * @param order Dados do pedido
   * @returns Texto formatado da mensagem
   */
  createOrderConfirmationMessage(order: Order): string {
    // Formata a data para exibi√ß√£o
    const orderDate = order.date instanceof Date 
      ? order.date 
      : new Date(order.date);
    
    const formattedDate = orderDate.toLocaleDateString('pt-BR', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });

    // Formata os itens do pedido
    const itemsList = order.items.map(item => {
      const additionalText = item.additionals && item.additionals.length > 0
        ? `\n   - Com: ${item.additionals.map(add => `${add.quantity || 1}x ${add.name}`).join(', ')}`
        : '';
      
      return `‚Ä¢ ${item.quantity}x ${item.name}${additionalText}`;
    }).join('\n');

    // Formata valores monet√°rios
    const formatCurrency = (value: number) => `R$ ${value.toFixed(2).replace('.', ',')}`;

    // Constr√≥i a mensagem
    return `*Ol√°, ${order.customerName}!* üòä\n\n` +
           `Recebemos seu pedido #${order.id} realizado em ${formattedDate}.\n\n` +
           `*üìã Resumo do Pedido:*\n${itemsList}\n\n` +
           `*üí∞ Valores:*\n` +
           `Subtotal: ${formatCurrency(order.subtotal)}\n` +
           `Taxa de entrega: ${formatCurrency(order.deliveryFee)}\n` +
           `*Total: ${formatCurrency(order.total)}*\n\n` +
           `*üöö Entrega:*\n` +
           `${order.address.street}, ${order.address.number}` +
           `${order.address.complement ? ` - ${order.address.complement}` : ''}\n` +
           `${order.address.neighborhood}, ${order.address.city}\n\n` +
           `*üí≥ Pagamento:* ${order.paymentMethod === 'pix' ? 'PIX' : 'Cart√£o na entrega'}\n\n` +
           `Seu pedido est√° sendo preparado com todo carinho! Agradecemos a prefer√™ncia. üíú\n\n` +
           `Em caso de d√∫vidas, entre em contato conosco.`;
  },

  /**
   * Gera a URL para envio direto de mensagem via WhatsApp
   * @param phone N√∫mero de telefone do cliente
   * @param message Mensagem a ser enviada
   * @returns URL completa para WhatsApp
   */
  generateWhatsAppUrl(phone: string, message: string): string {
    const formattedPhone = this.formatPhoneNumber(phone);
    const encodedMessage = encodeURIComponent(message);
    return `https://api.whatsapp.com/send?phone=${formattedPhone}&text=${encodedMessage}`;
  },

  /**
   * Abre uma nova janela do navegador com a mensagem de confirma√ß√£o para o cliente
   * @param order Dados do pedido
   * @returns Verdadeiro se a opera√ß√£o foi bem-sucedida
   */
  async sendOrderConfirmation(order: Order): Promise<boolean> {
    try {
      if (!order.customerPhone) {
        console.error("Telefone do cliente n√£o dispon√≠vel para envio de confirma√ß√£o");
        return false;
      }

      const message = this.createOrderConfirmationMessage(order);
      const whatsappUrl = this.generateWhatsAppUrl(order.customerPhone, message);
      
      // Em ambiente de navegador, abre uma nova janela
      if (typeof window !== 'undefined') {
        window.open(whatsappUrl, '_blank');
        return true;
      }
      
      console.log("URL do WhatsApp gerada:", whatsappUrl);
      return true;
    } catch (error) {
      console.error("Erro ao enviar confirma√ß√£o via WhatsApp:", error);
      return false;
    }
  },

  /**
   * Envia automaticamente uma mensagem de confirma√ß√£o para o cliente
   * sem abrir uma nova janela (para uso em background)
   * @param order Dados do pedido
   * @returns URL do WhatsApp para envio manual se necess√°rio
   */
  prepareOrderConfirmation(order: Order): string | null {
    try {
      if (!order.customerPhone) {
        console.error("Telefone do cliente n√£o dispon√≠vel para envio de confirma√ß√£o");
        return null;
      }

      const message = this.createOrderConfirmationMessage(order);
      return this.generateWhatsAppUrl(order.customerPhone, message);
    } catch (error) {
      console.error("Erro ao preparar confirma√ß√£o via WhatsApp:", error);
      return null;
    }
  }
};

// Exportar fun√ß√µes individuais para facilitar o uso
export const sendOrderConfirmation = WhatsAppService.sendOrderConfirmation.bind(WhatsAppService);
export const prepareOrderConfirmation = WhatsAppService.prepareOrderConfirmation.bind(WhatsAppService);
